generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account_password_reset_keys {
  id              BigInt   @id @default(autoincrement())
  key             String   @db.VarChar(255)
  deadline        DateTime @db.DateTime(6)
  email_last_sent DateTime @default(now()) @db.DateTime(6)
  accounts        accounts @relation(fields: [id], references: [id], onUpdate: Restrict, map: "fk_rails_ccaeb37cea")

  @@ignore
}

model account_verification_keys {
  id              BigInt   @id @default(autoincrement())
  key             String   @db.VarChar(255)
  requested_at    DateTime @default(now()) @db.DateTime(6)
  email_last_sent DateTime @default(now()) @db.DateTime(6)
  accounts        accounts @relation(fields: [id], references: [id], onUpdate: Restrict, map: "fk_rails_2e3b612008")

  @@ignore
}

model accounts {
  id                          BigInt                       @id @default(autoincrement())
  status                      Int                          @default(1)
  email                       String                       @unique(map: "index_accounts_on_email") @db.VarChar(255)
  password_hash               String?                      @db.VarChar(255)
  admin                       Boolean                      @default(false)
  account_password_reset_keys account_password_reset_keys? @ignore
  account_verification_keys   account_verification_keys?   @ignore
}

model action_text_rich_texts {
  id          BigInt   @id @default(autoincrement())
  name        String   @db.VarChar(255)
  body        String?  @db.LongText
  record_type String   @db.VarChar(255)
  record_id   BigInt
  created_at  DateTime @db.DateTime(6)
  updated_at  DateTime @db.DateTime(6)

  @@unique([record_type, record_id, name], map: "index_action_text_rich_texts_uniqueness")
  @@ignore
}

model active_storage_attachments {
  id                   BigInt               @id @default(autoincrement())
  name                 String               @db.VarChar(255)
  record_type          String               @db.VarChar(255)
  record_id            BigInt
  blob_id              BigInt
  created_at           DateTime             @db.DateTime(0)
  active_storage_blobs active_storage_blobs @relation(fields: [blob_id], references: [id], onUpdate: Restrict, map: "fk_rails_c3b3935057")

  @@unique([record_type, record_id, name, blob_id], map: "index_active_storage_attachments_uniqueness")
  @@index([blob_id], map: "index_active_storage_attachments_on_blob_id")
  @@ignore
}

model active_storage_blobs {
  id                             BigInt                           @id @default(autoincrement())
  key                            String                           @unique(map: "index_active_storage_blobs_on_key") @db.VarChar(255)
  filename                       String                           @db.VarChar(255)
  content_type                   String?                          @db.VarChar(255)
  metadata                       String?                          @db.Text
  service_name                   String                           @db.VarChar(255)
  byte_size                      BigInt
  checksum                       String?                          @db.VarChar(255)
  created_at                     DateTime                         @db.DateTime(0)
  active_storage_attachments     active_storage_attachments[]
  active_storage_variant_records active_storage_variant_records[]

  @@ignore
}

model active_storage_variant_records {
  id                   BigInt               @id @default(autoincrement())
  blob_id              BigInt
  variation_digest     String               @db.VarChar(255)
  active_storage_blobs active_storage_blobs @relation(fields: [blob_id], references: [id], onUpdate: Restrict, map: "fk_rails_993965df05")

  @@unique([blob_id, variation_digest], map: "index_active_storage_variant_records_uniqueness")
  @@ignore
}

model ar_internal_metadata {
  key        String   @id @db.VarChar(255)
  value      String?  @db.VarChar(255)
  created_at DateTime @db.DateTime(6)
  updated_at DateTime @db.DateTime(6)

  @@ignore
}

model characters {
  id          BigInt   @id @default(autoincrement())
  player      String?  @db.VarChar(255)
  mortal_name String?  @map("mortalName") @db.VarChar(255)
  fae_name    String?  @map("faeName") @db.VarChar(255)
  rank        String?  @db.VarChar(255)
  kith        String?  @db.VarChar(255)
  location    String?  @db.VarChar(255)
  position    String?  @db.VarChar(255)
  seeming     String?  @db.VarChar(255)
  house       String?  @db.VarChar(255)
  bannerhouse String?  @db.VarChar(255)
  created_at  DateTime @map("createdAt") @db.DateTime(6)
  updated_at  DateTime @map("updatedAt") @db.DateTime(6)

  @@index([kith], map: "index_characters_on_kith")
  @@index([player], map: "index_characters_on_player")
  @@map("Character")
}

model schema_migrations {
  version String @id @db.VarChar(255)

  @@ignore
}
